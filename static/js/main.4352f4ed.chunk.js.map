{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","onChange","event","target","value","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4352f4ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\" >{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    about: 'About'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleupclick = () => {\r\n        // console.log('Upper Case was clicked' + text);\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Converted into UpperCase\",\"success\");\r\n    }\r\n    const handledownclick = () => {\r\n        // console.log('Upper Case was clicked' + text);\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted into LowerCase\",\"success\");\r\n    }\r\n    const handleclear = () => {\r\n        setText(' ');\r\n        props.showAlert(\"Clearing the Text\",\"success\");\r\n    }\r\n    const handleonchange = (event) => {\r\n        // console.log('Upper handle Case was clicked');\r\n        setText(event.target.value)\r\n    }\r\n    const handlecopy = () => {\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied\",\"success\");\r\n    }\r\n    const handleextra = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extra Spaces\",\"success\");\r\n    }\r\n    const [text, setText] = useState(' ');\r\n    // setText(\"Baby\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>{props.heading} </h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" id=\"mybox\" onChange={handleonchange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} value={text} rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleupclick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handledownclick}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleclear}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handlecopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleextra}>Remove extra spaces</button>\r\n            </div>\r\n            <div className=\"container  my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Your text summary </h2>\r\n                <p>{text.split(\" \").length} words, {text.length} characters</p>\r\n                <p> {0.08 * text.split(\" \").length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p> {text.length > 0 ? text : \"Enter in Textbox\"} </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\n// import ReactDOM from 'react-dom'\n// import About from './components/About.js';\nimport Navbar from './components/Navbar.js';\nimport Textform from './components/Textform.js';\nimport Alert from './components/Alert.js';\nimport { useState } from 'react';\n\n\n// let name = \"Checking\";\nfunction App() {\n\n  const [mode, setMode] = useState('light');  // whether the dark mode is enabled or not (false means not enabled)\n  const [alert, setAlert] = useState(null);  // whether the dark mode is enabled or not (false means not enabled)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode is enabled\", \"success\");\n      document.title = 'TextUtils - Dark mode';\n      // setInterval(() => {\n      //   document.title = 'Txtutils is amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Fuck you';\n      // }, 1500); \n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode is enabled\", \"success\");\n      document.title = 'TextUtils - Light mode';\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-4\">\n        {/* <Routes>\n            <Route path=\"/about\" element={<About />}>\n\n            </Route>\n            <Route path=\"/\" element={\n              {/* }>\n            </Route> */}\n        <Textform heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert} />\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}